<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>蛋白质性质和结构分析</title>
      <link href="/2024/04/28/%E8%9B%8B%E7%99%BD%E8%B4%A8%E6%80%A7%E8%B4%A8%E5%92%8C%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/"/>
      <url>/2024/04/28/%E8%9B%8B%E7%99%BD%E8%B4%A8%E6%80%A7%E8%B4%A8%E5%92%8C%E7%BB%93%E6%9E%84%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="蛋白质性质和结构分析">蛋白质性质和结构分析</h1><h2 id="蛋白质结构">蛋白质结构</h2><ul><li>分析蛋白质的一级结构<ul><li>等电点、分子量、氨基酸组成、疏水性、保守结构域、保守位点</li></ul></li><li>分析膜蛋白质<ul><li>跨膜或内在膜蛋白、锚定蛋白、外周蛋白<ul><li>跨膜区一般形成<span class="math inline">\(\alpha-螺旋\)</span></li><li>直接与脂双分子层连接</li><li>通过糖分子间接与脂结合</li></ul></li><li>预测膜整合蛋白的跨膜区</li><li>分析膜锚定蛋白的GPi位点</li><li>分析蛋白质的翻译后修饰<ul><li>分析信号肽及其剪切位点 SignalP</li><li>蛋白质糖基化-分析糖链连接点</li></ul></li><li>分析蛋白质的亚细胞定位 DeepLoc<ul><li>了解蛋白质功能、互作</li></ul></li></ul></li></ul><h2 id="蛋白质结构预测">蛋白质结构预测</h2><ul><li>蛋白质二级结构预测<ul><li><span class="math inline">\(\alpha-螺旋\)</span>，<span class="math inline">\(\beta-折叠\)</span>、转角、环、无规则卷</li><li>DSSP：已知三维结构的蛋白质二级结构</li><li>每一段相邻的氨基酸残基具有形成一定二级结构的倾向<ul><li>统计学方法<ul><li>单个氨基酸经验参数法<ul><li>构象倾向性因子</li></ul></li><li>氨基酸片段的统计分析</li></ul></li><li>基于立体化学原则的物理化学方法<ul><li>LIM法</li></ul></li><li>神经网络和人工智能</li></ul></li></ul></li><li>蛋白质三级结构预测<ul><li>同源建模法<ul><li>是一种基于知识的蛋白质结构预测方法。根据对蛋白质结构数据库PDB中的蛋白质结构比较分析研究得知，任何一对蛋白质，只要它们序列的长度达到一定程度，序列相似性超过30%，就可以保证他们具有相似的三维结构。</li></ul></li><li>折叠识别法<ul><li>序列相似的有相似的折叠模式。</li></ul></li><li>从头预测法<ul><li>指从蛋白质的一级结构出发，根据物理化学、量子化学、量子物理的基本原理，利用各种理论方法计算蛋白质肽链所有可能构象的能量，然后从中找到能量最低的构象，作为蛋白质的天然构象。</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 生物信息学原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>构建heox并且部署到github上</title>
      <link href="/2024/04/28/%E6%9E%84%E5%BB%BAheox/"/>
      <url>/2024/04/28/%E6%9E%84%E5%BB%BAheox/</url>
      
        <content type="html"><![CDATA[<h1 id="构建heox并且部署到github上">构建heox并且部署到github上</h1><h2 id="下载并且安装heox到windows上">下载并且安装heox到windows上</h2><p>进入<a href="https://nodejs.org/en/">Node网站</a>下载 <img src="/.com//heox.png" alt="下载文件"> 一直点击下一步进行安装，直至完成。完成后在cmd中输入两行命令检测是否安装成功 <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure> <img src="/.com//test.png" alt="版本">若未显示版本号，则重启一下电脑重试。</p><h2 id="安装git到windows上">安装GIT到windows上</h2><p>进入<a href="https://git-scm.com/">Git网站</a>下载 <img src="/.com//git.png" alt="Alt text"> 安装完成后请输入以下命令配置git<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;user_name&quot;</span> <span class="comment"># user_name 填入 GitHub 用户名</span></span><br><span class="line">git config --global user.email <span class="string">&quot;user_email&quot;</span> <span class="comment"># user_email 填入 GitHub 注册的邮箱</span></span><br></pre></td></tr></table></figure></p><h2 id="搭建butterfly主题并且快速美化">搭建Butterfly主题并且快速美化</h2><h2 id="借鉴">借鉴</h2><ul><li>https://fanyfull.github.io/2021/10/16/Github-Hexo-%E7%9C%9F-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA-GitHub-%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2/</li><li>https://blog.csdn.net/mjh1667002013/article/details/129290903</li></ul>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> heox </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2024/04/28/%E8%87%AA%E5%BB%BA%E5%87%BD%E6%95%B0/"/>
      <url>/2024/04/28/%E8%87%AA%E5%BB%BA%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="choosegetcol">choosegetcol()</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">choosegetcol <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>path_read<span class="punctuation">,</span>col<span class="operator">=</span>V<span class="punctuation">,</span><span class="built_in">min</span><span class="operator">=</span><span class="number">0.99</span><span class="punctuation">,</span><span class="built_in">max</span><span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span>path_write<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">{</span></span><br><span class="line">    <span class="comment">#---------------根据列获取特定情况----------------#</span></span><br><span class="line">    <span class="comment">#path是文件路径</span></span><br><span class="line">    <span class="comment">#col是列名称</span></span><br><span class="line">    <span class="comment">#min，max是对应列要筛选的范围</span></span><br><span class="line">    file <span class="operator">&lt;-</span>  read.csv<span class="punctuation">(</span>path_read<span class="punctuation">,</span> header <span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">','</span><span class="punctuation">)</span></span><br><span class="line">    file <span class="operator">&lt;-</span> subset<span class="punctuation">(</span>file<span class="punctuation">,</span>file<span class="punctuation">[</span><span class="punctuation">,</span>col<span class="punctuation">]</span> <span class="operator">&gt;</span> <span class="built_in">as.numeric</span><span class="punctuation">(</span><span class="built_in">min</span><span class="punctuation">)</span> <span class="operator">&amp;</span> file<span class="punctuation">[</span><span class="punctuation">,</span>col<span class="punctuation">]</span> <span class="operator">&lt;</span> <span class="built_in">as.numeric</span><span class="punctuation">(</span><span class="built_in">max</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">    write.csv<span class="punctuation">(</span>file<span class="punctuation">,</span>path_write<span class="punctuation">,</span>row.names<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></table></figure><ul><li>第一行：读取文件为数据框[[R语言学习#read.csv()]]（现在改用read_csv）[[R语言学习#read_csv()]]</li><li>第二行：依据特定条件挑选数据框特定行[[R语言学习#subset()]]</li><li>第三行：保存文件到path_write[[R语言学习#write.csv()]]（现在改用write_csv)[[R语言学习#write_csv()]]</li></ul><p><span class="math display"><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.618ex;" xmlns="http://www.w3.org/2000/svg" width="8.393ex" height="2.315ex" role="img" focusable="false" viewbox="0 -750 3709.7 1023.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msubsup"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="mi" transform="translate(562,413) scale(0.707)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"/></g><g data-mml-node="mi" transform="translate(562,-265.5) scale(0.707)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"/></g></g><g data-mml-node="mo" transform="translate(1196,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"/></g><g data-mml-node="mi" transform="translate(2251.7,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"/></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(2780.7,0)"><g data-mml-node="mo"><path data-c="2F" d="M423 750Q432 750 438 744T444 730Q444 725 271 248T92 -240Q85 -250 75 -250Q68 -250 62 -245T56 -231Q56 -221 230 257T407 740Q411 750 423 750Z"/></g></g><g data-mml-node="mi" transform="translate(3280.7,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"/></g></g></g></svg></mjx-container></span></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>序列模拟论文</title>
      <link href="/2016/11/16/%E5%BA%8F%E5%88%97%E6%A8%A1%E6%8B%9F%E8%AE%BA%E6%96%87/"/>
      <url>/2016/11/16/%E5%BA%8F%E5%88%97%E6%A8%A1%E6%8B%9F%E8%AE%BA%E6%96%87/</url>
      
        <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/612761934">NeurIPS2022｜基于三维感知神经网络的药物蛋白质结合预测 - 知乎(zhihu.com)</a></p><h2 id="环境建立">环境建立</h2><ul><li>python2.7</li></ul><p><a href="https://www.mdpi.com/2227-9059/11/1/67">生物医药 |免费全文|GraphATT-DTA：基于注意力的新型相互作用表示，以预测药物-靶标结合亲和力(mdpi.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 基于三维结构预测DTI </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
